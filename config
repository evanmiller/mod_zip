ngx_addon_name=ngx_http_zip_module

if [ $ngx_module_link = DYNAMIC ] ; then
    ngx_module_name=ngx_http_zip_module
    ngx_module_srcs="$ngx_addon_dir/ngx_http_zip_module.c $ngx_addon_dir/ngx_http_zip_parsers.c $ngx_addon_dir/ngx_http_zip_file.c $ngx_addon_dir/ngx_http_zip_headers.c"

    . auto/module
elif [ $ngx_module_link = ADDON ] ; then
    HTTP_AUX_FILTER_MODULES="$HTTP_AUX_FILTER_MODULES ngx_http_zip_module"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_zip_module.c"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_zip_parsers.c"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_zip_file.c"
    NGX_ADDON_SRCS="$NGX_ADDON_SRCS $ngx_addon_dir/ngx_http_zip_headers.c"

    . auto/module    
fi

ngx_feature="iconv_open()"
ngx_feature_name="NGX_ZIP_HAVE_ICONV"
ngx_feature_run=no
ngx_feature_incs="#include <iconv.h>"
ngx_feature_path=
case "$NGX_PLATFORM" in
    Linux:*)
        ngx_feature_libs=
    ;;

    *)
        ngx_feature_libs="-liconv"
    ;;
esac
ngx_feature_test="iconv_open(\"IBM-850\", \"ISO8859-1\");"
. auto/feature

if [ $ngx_found = yes ]; then
    CORE_LIBS="$CORE_LIBS $ngx_feature_libs"
    ngx_found=no
fi

ngx_feature="multi-value headers are linked lists (nginx 1.23.0+)"
ngx_feature_name="NGX_ZIP_MULTI_HEADERS_LINKED_LISTS"
ngx_feature_run=yes
ngx_feature_incs="#include \"nginx.h\""
ngx_feature_path="src/core"
ngx_feature_test="
#if nginx_version < 1023000
#error multi headers are no linked lists
#endif
"
. auto/feature
